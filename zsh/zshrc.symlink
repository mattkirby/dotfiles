# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

#zsh_cache=${HOME}/.zsh_cache
#[[ ! -d $zsh_cache ]] && mkdir -p $zsh_cache

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="robbyrussell"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias dots="puppet apply -v ~/dotfiles/initialize.rb"Â·
alias gam="python $HOME/Downloads/gam/gam.py"
alias digs="dig +short"
alias l="ls -l"
alias infra="$HOME/Puppet Labs/puppetlabs-sysadmin/"
alias xpass="/opt/bin/xkcd_password.py -w /opt/bin/2of12.txt -n 4"
alias genpass="/usr/bin/openssl rand -base64 32"
alias fixairplay="sudo kill `ps ax | grep 'coreaudiod' | grep 'sbin' |awk '{print $1}'`"
alias fixtouchbar="pkill 'Touch Bar agent'; killall 'ControlStrip'"
alias gpull="git pull ; git fetch --all --prune ; git merged"
alias pagent="puppet agent -t \"$@\""
alias flush_dns="dscacheutil -flushcache && sudo killall -HUP mDNSResponder"

bootstrap_node_pe_puppet_and_update() {
  environment=${3:=production}
  osversion=${4:=jessie}
  peserver=${5:=pe-mom1-prod}
  ssh root@$1 "echo 'setting hostname...' ; sed -i 's/debian/${2}/g' /etc/hosts && sed -i 's/debian/${2}/' /etc/hostname && shutdown -r & exit"
  echo "Waiting for reboot"
  sleep 30
  ssh root@"${1}" "apt-get install -y curl && echo deb http://plops-debrepo.s3.amazonaws.com ${4} main | tee /etc/apt/sources.list.d/s3-debrepo.list && curl -s -o - http://plops-debrepo.s3.amazonaws.com/plops.gpg.key | apt-key add - && apt-get update && apt-get upgrade -y && apt-get install -y pe-agent && rm /etc/puppetlabs/mcollective/server.cfg ; puppet agent -t --environment ${3} --server pe-mom1-prod.ops.puppetlabs.net --waitforcert 15" }
gitp() { git push origin $(git branch | grep \* | awk '{ print $2 }') }

start_agent() {
  if [ $(gpg-agent &> /dev/null ; echo $?) -ne 0 ]; then
  gpg-agent --daemon --enable-ssh-support
  fi}

bootstrap_node_pe_centos() {
  nodeip=$1
  hostname=$2
  server=${$3:-'puppet-next.ops.puppetlabs.net'}
  penv=${$4:-'production'}
  peurl=${$5:-'http://pm.puppetlabs.com/puppet-agent/2015.2.2/1.2.6/repos/el/7/PC1/x86_64/puppet-agent-1.2.6-1.el7.x86_64.rpm'}
  caserver=${$6:-'pe-mom1-prod.ops.puppetlabs.net'}
  domain='ops.puppetlabs.net'
  ssh root@${node} "hostnamectl set-hostname ${hostname};
                    nisdomainname ${domain}; reboot"
  sleep 20
  ssh root@${hostname}.${domain} "curl -L -O ${peurl};
    yum localinstall $(echo ${peurl} | awk -F'/' '{print $NF}');
    /opt/puppetlabs/bin/puppet agent -t --environment ${penv} --server ${server}"
  ssh ${caserver} sudo puppet cert -s ${hostname}.${domain}
  ssh root@${hostname}.${domain} "/opt/puppetlabs/bin/puppet agent -t --environment ${penv} --server ${server}"
}

GPG_TTY=`tty`
export GPG_TTY

#mytest() { "$@"
# local status=$?
# if [ status -ne 0 ]; then
#   echo "error with $1"
# fi
# return $status }

# BSD Ports
ports_find() { ( cd /usr/ports && make search name=$@ ) }
ports_install() { ( cd $@ && make install ) }

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment to change how many often would you like to wait before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
 COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git)

source $ZSH/oh-my-zsh.sh

export PATH="$HOME/.asdf/bin":~/.rbenv/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/git/bin:/usr/local/sbin:/opt/local/bin:/usr/bin/puppet:/usr/local/munki:/Users/kirby/bin:/opt/puppet/bin:/opt/puppetlabs/bin

##
# GPG Agent - For use with SSH
#
if [ -f "${HOME}/.gpg-agent-info" ]; then
  . "${HOME}/.gpg-agent-info"
  export GPG_AGENT_INFO
  export SSH_AUTH_SOCK
  #export PINENTRY_USER_DATA="USE_CURSES=1"
fi
export GPG_TTY=$(tty)

#export RUBYOPT=rubygems
#export RUBYLIB=puppet-puppetdbquery/lib:$RUBYLIB
#export VAGRANT_DEFAULT_PROVIDER=vmware_fusion

# Unlimited history
#HISTFILE=$HOME/dotfiles/.zsh_eternal_history
#setopt APPEND_HISTORY
#HISTSIZE=
#SAVEHIST=
#HISTFILESIZE=
#setopt EXTENDED_HISTORY
#export HISTTIMEFORMAT="[%F %T] "
# Change the file location because certain bash sessions truncate .bash_history file upon close.
# # http://superuser.com/questions/575479/bash-history-truncated-to-500-lines-on-each-login
# Force prompt to write history after every command.
# # http://superuser.com/questions/20900/bash-history-loss
#PROMPT_COMMAND="history -a; $PROMPT_COMMAND"

export ZSH=$HOME/dotfiles
#export PROJECTS=~/Code
#export WORK=~/PuppetLabs
#for config_file ($ZSH/**/*.zsh) source $config_file

#if [[ -a ~/.localrc ]]
#then
#  source ~/.localrc
#fi

# Less Colors for Man Pages
export LESS_TERMCAP_mb=$'\E[01;31m'       # begin blinking
export LESS_TERMCAP_md=$'\E[01;38;5;74m'  # begin bold
export LESS_TERMCAP_me=$'\E[0m'           # end mode
export LESS_TERMCAP_se=$'\E[0m'           # end standout-mode
export LESS_TERMCAP_so=$'\E[38;5;246m'    # begin standout-mode - info box
export LESS_TERMCAP_ue=$'\E[0m'           # end underline
export LESS_TERMCAP_us=$'\E[04;38;5;146m' # begin underline

export EDITOR=vim

start_agent

fpath=($ZSH/zsh/functions $fpath)

autoload -U compinit
compinit

# Hook direnv into your shell.
eval "$(asdf exec direnv hook zsh)"

if [ -e "$HOME/.rbenv" ]; then
eval "$(rbenv init -)"
else
fi
